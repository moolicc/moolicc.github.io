
name: Add gist post

on:
  workflow_dispatch:
    inputs:
      filename:
        description: 'Name of the gist file'     
        required: true

env:
  GIST_OWNER: 'moolicc'
  GIST_DESC_TARGET: 'posts'

jobs:
  post-gist:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Bootstrap post from gist
        uses: satackey/action-js-inline@release-master
        id: getdata
        with:
          required-packages: axios
          script: |
            const core = require('@actions/core');
            const axios = require('axios');
            var fs = require('fs');
            var path = require('path');
            
            const owner = '${{ env.GIST_OWNER }}'
            const desc = '${{ env.GIST_DESC_TARGET }}'
            const target = '${{ github.event.inputs.filename }}'
            
            console.log("Downloading gist information...");
            const response = await axios(`https://api.github.com/users/${owner}/gists`);
            
            if(response.status != 200) {
              core.setFailed(`Failed to receive gist information.`);
            }
            console.log("Gist information received.");
            
            
            console.log("Searching for file in gist...");
            var fileFound = false;
            var fileUrl = "";
            
            var i = -1;
            for(let gist of response.data) {
              i++;
              if(gist.description == desc) {
                for(let file in gist.files) {
                  if(file == target) {
                    fileFound = true;
                    fileUrl = response.data[i]["files"][target]["raw_url"];
                  }
                }
                break;
              }
              
            }
            
            if(!fileFound) {
              core.setFailed(`Failed to find file ${target}.`);
            }
            console.log(`File found. Url: '${fileUrl}'`);
            
            console.log("Downloading file contents...");
            var contents = await axios(fileUrl);
            if(contents.status != 200) {
              core.setFailed("Failed to download contents of file.");
            }
            console.log(`Contents downloaded. Length: ${contents.data.length} bytes`);

            var localFile = `content/blog/${target}`;
            
            console.log(`Writing post markdown file '${localFile}'`...);
            fs.writeFile(localFile, contents.data, function(e) => { });
            console.log("File written.");
            
            console.log(fs.readFileSync(`content/blog/${target}`, 'utf8', function(err) {
              console.error(err);
            }));
            
